<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Unreal on Shermans's Notes</title><link>https://shermanrose.uk/knowledge/unreal/</link><description>Recent content in Unreal on Shermans's Notes</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><atom:link href="https://shermanrose.uk/knowledge/unreal/index.xml" rel="self" type="application/rss+xml"/><item><title>Unreal - Asset Manager</title><link>https://shermanrose.uk/knowledge/unreal/ue-asset-manager/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shermanrose.uk/knowledge/unreal/ue-asset-manager/</guid><description>Asset Manager At a high level, you can use the asset manager to handle loading and unloading of assets at runtime. It is also is used to manage the chunks that data are compiled into (when using chunking).
It communicates with the Asset Register, the system used by the editor to know of all of the assets available, which is in turn used by the Cooker. When something is cooked, changes are it had a reference to it from another asset, discovered from the Asset Registry.</description></item><item><title>Unreal - Bink Media Player</title><link>https://shermanrose.uk/knowledge/unreal/ue-bink/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shermanrose.uk/knowledge/unreal/ue-bink/</guid><description>Bink Media Player Frame Drop Had this really annoying issue on a client project, where two &amp;ldquo;Screens&amp;rdquo;, which were UI Widgets, seem to drop a frame, during switching between them, showing the background scene. Spent a while with the assumption it was a timing issue between the hide and show calls for the UI, as if I fram was being drawn during the hide and show.</description></item><item><title>Unreal - Blueprint Diffs</title><link>https://shermanrose.uk/knowledge/unreal/ue-diff-tools/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shermanrose.uk/knowledge/unreal/ue-diff-tools/</guid><description>Diff tools Diff Blueprints In Editor In editor you can diff by right clicking the Blueprint and clicking Diff Against Depot External Diff You can only diff in editor, however you can setup an external VCS tool to call the editor up to diff blueprints. Perforce In preferences you can setup up the application to call based on the file extension.</description></item><item><title>Unreal - Cameras</title><link>https://shermanrose.uk/knowledge/unreal/ue-cameras/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shermanrose.uk/knowledge/unreal/ue-cameras/</guid><description>Cameras Dynamic Third Person Cameras https://magazine.renderosity.com/article/4382/6-tips-for-creating-a-dynamic-third-person-camera-in-unrealengine
A great article detailing the setup of the Camera Manager in Unreal and example code for setting up modifiers https://github.com/DaedalicEntertainment/third-person-camera UCameraModifer has a number of functions that can be overwritten in order to change the camera
ProcessViewRotation allows you to make changes to the AController&amp;rsquo;s Control totaiton which represents the &amp;rsquo;true aim&amp;rsquo; view.</description></item><item><title>Unreal - Coding Standards</title><link>https://shermanrose.uk/knowledge/unreal/ue-coding-standards/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shermanrose.uk/knowledge/unreal/ue-coding-standards/</guid><description>UE4 C++ Coding Standards Comments Epic use a modified Doxygen for unreal https://answers.unrealengine.com/questions/77297/what-tool-does-epic-use-for-generating-api-documen.html Doxygen hope pages for sepcial coments commands https://www.doxygen.nl/manual/commands.html#cmdsa</description></item><item><title>Unreal - Config Variables</title><link>https://shermanrose.uk/knowledge/unreal/ue-config-vars/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shermanrose.uk/knowledge/unreal/ue-config-vars/</guid><description>Config Variables You can create custom Client and Server vars as feature or testing switches. To access in editor open the command window (` by default).
It supports fuzzy matching and autocomplete Settings here last the duration of the editor session Vars can be set in config/*.ini files. Helpful for persistant testing vars across editor loads. Careful not to submit to VCS by mistake</description></item><item><title>Unreal - Data Containers</title><link>https://shermanrose.uk/knowledge/unreal/ue-data-containers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shermanrose.uk/knowledge/unreal/ue-data-containers/</guid><description>Data Containers TCircularBuffer&amp;lt;T&amp;gt; Engine/Source/Runtime/Core/Public/Containers/CircularBuffer.h
TArray&amp;lt;T&amp;gt; backed, with helper elements to manage indexing in a cirular fashion. Backing array is private Can access elements with a provided [] operator Does not provide internal current index, this need to be tracked outside of the container. Capacity must be provided at compile time meaing you must init this in your UCLASS as part of the initalizer list if included as a non inited class variable.</description></item><item><title>Unreal - Delegates and Events</title><link>https://shermanrose.uk/knowledge/unreal/ue-delegates-and-events/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shermanrose.uk/knowledge/unreal/ue-delegates-and-events/</guid><description>Delegates And Events Delegates and Events are simliar with different semantics.
Delegates can be Broadcast by anyone where as events can only be broadcast by the owner Only DYNAMIC_MULTICAST_DELEGATES can be accesed from Blueprints. Non dynamic delegates are event are code only forms
This is due to the need to call the delgate by name DYNAMIC_MULTICAST_DELEGATES are said to be slower, which would makes sense considering the level of indirection needed to call from blueprint.</description></item><item><title>Unreal - Editor notes</title><link>https://shermanrose.uk/knowledge/unreal/ue-editor/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shermanrose.uk/knowledge/unreal/ue-editor/</guid><description>Unreal Editor Settings to note Full performance when not in focus. - use less cpu Useful most of the time, but at times a killer, find it in Editor Preferences -&amp;gt; Miscellaneous -&amp;gt; Use Less CPU when in background</description></item><item><title>Unreal - Enums</title><link>https://shermanrose.uk/knowledge/unreal/ue-enums/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shermanrose.uk/knowledge/unreal/ue-enums/</guid><description>Enums Enum Scoping Never use unscoped enums, as values can clash with predefined eums Use enum class / enum struct instead: I have had a warning that scroped classes only support uint8 UENUM(BlueprintType) enum class ETabBreadcrumb : uint8 { None, ThingA, ThingB } Getting the enum name from a value: UEnum::GetValueAsString(value); Returns an FString, so when logging make sure to dereference!</description></item><item><title>Unreal - Localisation</title><link>https://shermanrose.uk/knowledge/unreal/ue-localisation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shermanrose.uk/knowledge/unreal/ue-localisation/</guid><description>Localisation in UE4 Firstly, Read the docs
https://docs.unrealengine.com/en-US/Gameplay/Localization/Overview/index.html Window -&amp;gt; Localization Dashboard to bring up UI.
Most resources talk about this part as if the system is new, however the dashboard is just a new UI to link with the system that was already there in code. Set up your gather rules, how you gather these rules has a direct effect on how long the Gather Text takes take.</description></item><item><title>Unreal - Logging</title><link>https://shermanrose.uk/knowledge/unreal/ue-logging/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shermanrose.uk/knowledge/unreal/ue-logging/</guid><description>Logging Logging to Game Window UE_LOG General logging Macro with configurable category and verbosity.
UE_LOG(LogTemp, Warning, TEXT(&amp;quot;We %s hit %s&amp;quot;), *actor_name, *our_name); LogTemp and Warning are the Category and Verbosity Mask. See engine source Engine\Source\Runtime\Core\Public\Logging\LogVerbosity.h for listings The text portion can use printf specifiers when passing FString, remember to dereference them so the log can use the underlaying TCHAR, Verbosity levels : NoLogging, Fatal, Error, Warning, Display, Log, Verbose, VeryVerbose, All, VerbosityMask, SetColor, BreakOnLog,  Docs: https://docs.</description></item><item><title>Unreal - Movement</title><link>https://shermanrose.uk/knowledge/unreal/ue-movement/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shermanrose.uk/knowledge/unreal/ue-movement/</guid><description>Movement Movement is split between a few components.
APlayerController Engine/Source/Runtime/Engine/Classes/GameFramework/PlayerController.h
UPlayerController handles input modes and events.
Contains a rotation to represent a players rotation AddPitchInput(float Val) AddYawInput(float Val) AddRollInput(float Val) Contains functions and events for handling input IsInputKeyDown(FKey Key) WasInputKeyJustPressed(FKey Key) GetInputVector / GetInputAnalogKeyState / GetMousePos UPawnMovementController Takes a normalised movment input vector in order and then calculates the output velocity of the Actor it is attached to.</description></item><item><title>Unreal - Packaging</title><link>https://shermanrose.uk/knowledge/unreal/ue-packaging/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shermanrose.uk/knowledge/unreal/ue-packaging/</guid><description>Packaging Project Launcher Can be found at Window-&amp;gt;Project Launcher Useful tool for monitoring and testing builds, for difference devices from the editor Realtime in editor logging during all build stages. Also attaches to new game process for logging. Great for finding packaging errors, at least on game start. Making a Package From the Editor Can be cound under File-&amp;gt;Package Project Can quickly access Packaging Settings from this menu as well as change Build Configuration and Build Target Uses BuildCookRun as you would on command line to produce the build From Command Line Two ways of approaching this.</description></item><item><title>Unreal - Play In Editor (PIE)</title><link>https://shermanrose.uk/knowledge/unreal/ue-pie/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shermanrose.uk/knowledge/unreal/ue-pie/</guid><description>Notes about PIE in Unreal</description></item><item><title>Unreal - Project Launcher</title><link>https://shermanrose.uk/knowledge/unreal/ue-project-launcher/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shermanrose.uk/knowledge/unreal/ue-project-launcher/</guid><description>Oh no! I didn&amp;rsquo;t write any notes for this!</description></item><item><title>Unreal - Sequences</title><link>https://shermanrose.uk/knowledge/unreal/ue-sequences/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shermanrose.uk/knowledge/unreal/ue-sequences/</guid><description>Sequences &amp;ldquo;possibly one of the most finicky parts of unreal&amp;hellip;:)&amp;rdquo; - Jonny
Sequences are the name for the timeline utilities. From cutscenes to looping event&amp;rsquo;s animations.
Cameras From my observations working with cameras and sequences. (4.26)
Creating Cine Camera Actor cameras does add them to the level, however (in PIE at least), they are recreated and deleted on demand. (Currently not sure how this plays with Dollys and cranes).</description></item><item><title>Unreal - UI and Widgets</title><link>https://shermanrose.uk/knowledge/unreal/ue-ui/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shermanrose.uk/knowledge/unreal/ue-ui/</guid><description>UI, Widgets and stuff Creating Widgets in Code Simple Tutorial https://www.youtube.com/watch?v=lYfXkxlInVIuuukjA Nagivation of UI Unreal has a built in system that can handle basic navigation types. These types are defined in EUINavigation and are. Up Down Left Right Next Previous Most of the Widgets, will use the EVisibilty type and code for each of the widgets to determine which items should be navigated to next Each EUINavigation Type can have some behaviour associated with it.</description></item><item><title>Unreal - Visual Logger</title><link>https://shermanrose.uk/knowledge/unreal/ue-visual-logger/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shermanrose.uk/knowledge/unreal/ue-visual-logger/</guid><description>Visual Logger Docs: https://docs.unrealengine.com/en-US/TestingAndOptimization/VisualLogger/index.html
An in editor tool for the collection, display and graphing of data collected during a sessions. Useful for debugging issues over time.
ue-visual-logger can be opened in console. vislog or in menus via Windows =-&amp;gt; Developer Tools -&amp;gt; Visual Logger Settings contains some helpful options: Reset Data with new Session to clear on new ue-pie session Stick to Recent Data to follow the latest frame&amp;rsquo;s data</description></item></channel></rss>