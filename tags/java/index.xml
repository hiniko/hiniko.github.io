<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>java on Shermans's Notes</title><link>https://shermanrose.uk/tags/java/</link><description>Recent content in java on Shermans's Notes</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><atom:link href="https://shermanrose.uk/tags/java/index.xml" rel="self" type="application/rss+xml"/><item><title>Java and Gradle Notes</title><link>https://shermanrose.uk/posts/2017/java-and-gradle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shermanrose.uk/posts/2017/java-and-gradle/</guid><description>Yay, build tools! OK, here we go. I&amp;rsquo;m working using Java now, so of course this means I have to learn a bit more about the build tools and dependacy managers that are out there now.
As far as I can see there are really two major contenders out there, maven and gradle. Both of these are combined dependancy managers and build tools each aimed at being &amp;ldquo;THE ONE TRUE WAY&amp;rdquo; of doing things.</description></item><item><title>Learning Programming Through Competition</title><link>https://shermanrose.uk/projects/learning-programming-through-competition/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shermanrose.uk/projects/learning-programming-through-competition/</guid><description>LPTC for short, was my final year university project. The project spec was to create an application to aid new learners to procedural based programming, by having them compete their code with each other.
The application was written in Java and comprised of two parts.
The first was a simple text editor that could compile java byte-code at run-time. The second was a 2D arena based game where the compiled byte-code from multiple users was run.</description></item></channel></rss>